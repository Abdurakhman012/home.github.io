{"version":3,"sources":["components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/ProjectLanguage.jsx","components/home/ProjectCard.jsx","components/home/Project.jsx","components/home/GetInTouch.jsx","components/Footer.jsx","hooks/useIsomorphicLayoutEffect.js","hooks/useScrollPosition.js","hooks/useResizeObserver.js","components/Navbar.jsx","components/home/SkillsBar.jsx","components/home/SkillsTab.jsx","components/home/Skills.jsx","components/blog/BlogBuilder.jsx","editable-stuff/blog.jsx","components/blog/Blog.jsx","components/blog/BlogPost.jsx","App.js","serviceWorker.js","index.js","editable-stuff/resume.pdf"],"names":["MainBody","React","forwardRef","props","ref","Jumbotron","fluid","id","style","background","gradientColors","backgroundSize","className","Container","FirstName","MiddleName","LastName","cursor","show","devDesc","icons","map","icon","index","key","target","rel","href","url","aria-label","image","split","role","AboutMe","useState","instaProfilePic","setInstaProfilePic","showInstaProfilePic","showInsta","setShowInsta","Pdf","resumeURL","useEffect","handleRequest","e","a","axios","get","instaLink","instaUsername","instaQuery","response","console","log","data","graphql","user","profile_pic_url_hd","error","message","src","alt","aboutHeading","aboutDescription","ProjectLanguage","value","setData","useCallback","array","total_count","push","language","Math","trunc","ProjectCard","updated_at","setUpdatedAt","handleUpdatetime","date","Date","pushed_at","diff","getTime","hours","toString","day","getDate","monthIndex","getMonth","year","getFullYear","name","description","svn_url","stargazers_count","languages_url","Col","md","Card","Body","Title","as","Text","count","Project","projectsArray","setProjectsArray","dummyProjectsArr","Array","projectsLength","fill","gitHubLink","gitHubUsername","gitHubQuery","slice","projectHeading","Row","length","project","GetInTouch","footerMessage","emailAddress","Footer","backgroundColor","bgStyle","showGetInTouch","useIsomorphicLayoutEffect","window","useLayoutEffect","isBrowser","getScrollPosition","element","useWindow","x","y","position","current","document","body","getBoundingClientRect","scrollX","scrollY","left","top","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","handleScroll","setTimeout","addEventListener","removeEventListener","clearTimeout","defaultProps","useResizeObserver","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","Navigation","isTop","setIsTop","scrollPosition","setScrollPosition","navbarMenuRef","navbarDimensions","navBottom","bottom","offsetTop","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","showBlog","Link","to","SkillsBar","skill","isScrolled","width","ProgressBar","now","SkillsSection","skills","SkillsTab","xs","floor","Skills","skillsTabRef","setIsScrolled","Tabs","defaultActiveKey","Tab","tabClassName","eventKey","title","hardSkills","softSkills","BlogBuilder","list","addParagraph","addHeading","getBlog","this","bloglist","blog","blog1","Blog","BlogCard","process","BlogPost","match","params","post","Home","showSkills","App","titleRef","basename","showNavigationbar","path","exact","component","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"gPA6DeA,EAhDEC,IAAMC,YAAW,SAACC,EAAOC,GACxC,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,GAAG,OACHC,MAAO,CACLC,WAAW,0BAAD,OAA4BC,IAA5B,KACVC,eAAgB,eAElBC,UAAU,mHAEV,yBAAKL,GAAG,UACR,kBAACM,EAAA,EAAD,CAAWD,UAAU,eACnB,wBAAIR,IAAKA,EAAKQ,UAAU,aAAxB,UACME,IADN,YACmBC,IADnB,YACiCC,MAEjC,kBAAC,IAAD,CAAQJ,UAAU,cAAcK,OAAQ,CAAEC,MAAM,IAC7C,IACAC,KAEH,yBAAKP,UAAU,OACZQ,IAAMC,KAAI,SAACC,EAAMC,GAAP,OACT,uBACEC,IAAG,sBAAiBD,GACpBE,OAAO,SACPC,IAAI,sBACJC,KAAML,EAAKM,IACXC,aAAA,aAAkBP,EAAKQ,MAAMC,MAAM,KAAK,KAExC,uBAAGnB,UAAS,cAASU,EAAKQ,MAAd,8BAIlB,uBACElB,UAAU,gCACVe,KAAK,WACLK,KAAK,SACLH,aAAW,uBAJb,uB,kECwBKI,EA3DC,WAAO,IAAD,EAC0BC,mBAAS,IADnC,mBACbC,EADa,KACIC,EADJ,OAEcF,mBAASG,KAFvB,mBAEbC,EAFa,KAEFC,EAFE,OAGAL,mBAASM,KAAtBC,EAHa,oBAKpBC,qBAAU,WACJJ,GACFK,MAED,CAACL,IAEJ,IAAMK,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEKC,IAAMC,IAAIC,IAAYC,IAAgBC,KAF3C,OAEZC,EAFY,OAGlBC,QAAQC,IAAIF,GACZf,EAAmBe,EAASG,KAAKC,QAAQC,KAAKC,oBAJ5B,gDAMlBlB,GAAa,GACba,QAAQM,MAAM,KAAMC,SAPF,yDAAH,sDAWnB,OACE,yBAAKpD,GAAG,UAAUK,UAAU,iCAC1B,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,OACZ0B,GACC,yBAAK1B,UAAU,6CACb,yBACEA,UAAU,yCACVgD,IAAKzB,EACL0B,IAAI,oBAIV,yBAAKjD,UAAS,iBAAY0B,EAAY,IAAM,OAC1C,wBAAI1B,UAAU,8BAA8BkD,KAC5C,uBAAGlD,UAAU,oBAAoBmD,KAChCtB,GACC,uBAAG7B,UAAU,oBACX,uBACEA,UAAU,8BACVe,KAAMa,IACNf,OAAO,SACPC,IAAI,sBACJM,KAAK,SACLH,aAAW,aANb,gB,yCCdDmC,EAnCS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACb/B,mBAAS,IADI,mBAC9BoB,EAD8B,KACxBY,EADwB,KAG/BvB,EAAgBwB,sBAAW,sBAAC,4BAAAtB,EAAA,+EAEPC,IAAMC,IAAIkB,GAFH,cAExBd,EAFwB,yBAGvBe,EAAQf,EAASG,OAHM,gCAK9BF,QAAQM,MAAM,KAAMC,SALU,yDAO/B,CAACM,IAEJvB,qBAAU,WACRC,MACC,CAACA,IAEJ,IAAMyB,EAAQ,GACVC,EAAc,EAClB,IAAK,IAAI9C,KAAS+B,EAChBc,EAAME,KAAK/C,GACX8C,GAAef,EAAK/B,GAGtB,OACE,yBAAKX,UAAU,QAAf,aACa,IACVwD,EAAM/C,KAAI,SAACkD,GAAD,OACT,uBAAG/C,IAAK+C,EAAU3D,UAAU,+BACzB2D,EADH,KACeC,KAAKC,MAAOnB,EAAKiB,GAAYF,EAAe,KAAQ,GADnE,WCgEOK,EAxFK,SAAC,GAAe,IAAbT,EAAY,EAAZA,MAAY,EACE/B,mBAAS,WADX,mBAC1ByC,EAD0B,KACdC,EADc,KAG3BC,EAAmBV,uBAAY,WACnC,IAAMW,EAAO,IAAIC,KAAKd,EAAMe,WAEtBC,GADU,IAAIF,MACCG,UAAYJ,EAAKI,UAChCC,EAAQX,KAAKC,MAAMQ,EAAO,IAAO,GAAK,IAE5C,GAAIE,EAAQ,GACV,OAAOP,EAAa,GAAD,OAAIO,EAAMC,WAAV,eAEnB,IAcMC,EAAMP,EAAKQ,UACXC,EAAaT,EAAKU,WAClBC,EAAOX,EAAKY,cAElB,OAAOd,EAAa,MAAD,OAAOS,EAAP,YAlBA,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAM0CE,GAAzB,YAAwCE,MAE5D,CAACxB,EAAMe,YAEVtC,qBAAU,WACRmC,MACC,CAACA,IApC6B,IAsCzBc,EAAgE1B,EAAhE0B,KAAMC,EAA0D3B,EAA1D2B,YAAaC,EAA6C5B,EAA7C4B,QAASC,EAAoC7B,EAApC6B,iBAAkBC,EAAkB9B,EAAlB8B,cACtD,OACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAMtF,UAAU,4CAEd,kBAACsF,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,MAAMV,GAAQ,kBAAC,IAAD,MAA7B,KACA,kBAACO,EAAA,EAAKI,KAAN,KAAYV,GAAe,kBAAC,IAAD,CAAUW,MAAO,IAA5C,KACCV,EACC,oCACE,uBACElE,KAAI,UAAKkE,EAAL,uBACJjF,UAAU,kCAEV,uBAAGA,UAAU,kBAJf,kBAMA,uBACEe,KAAMkE,EACNpE,OAAO,UACPb,UAAU,6BAEV,uBAAGA,UAAU,kBALf,UASF,kBAAC,IAAD,CAAU2F,MAAO,IAEnB,6BACCR,EACC,kBAAC,EAAD,CAAiB9B,MAAO8B,IAExB,kBAAC,IAAD,CAAUQ,MAAO,IAElBT,EACC,uBAAGlF,UAAU,aACX,0BAAMA,UAAU,4BACd,uBAAGA,UAAU,kBADf,SACwC,IACtC,0BAAMA,UAAU,oBAAoBkF,IAEtC,2BAAOlF,UAAU,cAAjB,WAAuC+D,IAGzC,kBAAC,IAAD,UCnBG6B,EArDC,WAAO,IAAD,EACsBtE,mBAAS,IAD/B,mBACbuE,EADa,KACEC,EADF,KAUdC,EAAmB,IAAIC,MAAMC,KAAgBC,KAR9B,CACnBnB,KAAM,KACNC,YAAa,KACbC,QAAS,KACTC,iBAAkB,KAClBC,cAAe,KACff,UAAW,OAIPrC,EAAgBwB,sBAAW,sBAAC,4BAAAtB,EAAA,+EAEPC,IAAMC,IAC3BgE,IAAaC,IAAiBC,KAHF,OAExB9D,EAFwB,OAK9BuD,EAAiBvD,EAASG,KAAK4D,MAAM,EAAGL,MALV,gDAO9BzD,QAAQM,MAAM,KAAMC,SAPU,yDAS/B,IAMH,OAJAjB,qBAAU,WACRC,MACC,CAACA,IAGF,kBAACtC,EAAA,EAAD,CAAWC,OAAK,EAACC,GAAG,WAAWK,UAAU,gBACvC,kBAACC,EAAA,EAAD,CAAWD,UAAU,OACnB,wBAAIA,UAAU,8BAA8BuG,KAC5C,kBAACC,EAAA,EAAD,KACGX,EAAcY,OACXZ,EAAcpF,KAAI,SAACiG,EAAS/F,GAAV,OAChB,kBAAC,EAAD,CACEC,IAAG,uBAAkBD,GACrBhB,GAAE,uBAAkBgB,GACpB0C,MAAOqD,OAGXX,EAAiBtF,KAAI,SAACiG,EAAS/F,GAAV,OACnB,kBAAC,EAAD,CACEC,IAAG,gBAAWD,GACdhB,GAAE,gBAAWgB,GACb0C,MAAOqD,WCzCVC,MAXf,WACE,OACE,oCACE,wBAAI3G,UAAU,8BAAd,gBACA,uBAAGA,UAAU,yBACV4G,IADH,KACmB,uBAAG7F,KAAI,iBAAY8F,MAAiBA,KADvD,OCuBSC,EA7BA,WAAO,IAAD,EACDxF,mBAAS,CAAEyF,gBAAiB,YAAvCC,EADY,oBAGnB,OACE,4BAAQpH,MAAOoH,EAAShH,UAAU,6BAChC,kBAACC,EAAA,EAAD,KACGgH,KAAkB,kBAAC,EAAD,MACnB,uBAAGjH,UAAU,gBAFf,SAEuC,uBAAGA,UAAU,iBAFpD,MAE2E,IACzE,uBACEA,UAAU,mBACVc,IAAI,WACJC,KAAK,kCACLE,aAAW,aAJb,iBAOK,IAVP,SAWQ,uBAAGjB,UAAU,iBACnB,2BACE,2BAAOA,UAAU,cACd,IADH,iFCpBGkH,EACO,qBAAXC,OAAyBC,kBAAkBtF,YCC9CuF,EAAY,qBAAOF,OAEzB,SAASG,EAAT,GAAoD,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACpC,IAAKH,EAAW,MAAO,CAAEI,EAAG,EAAGC,EAAG,GAElC,IACMC,GADSJ,EAAUA,EAAQK,QAAUC,SAASC,MAC5BC,wBAExB,OAAOP,EACH,CAAEC,EAAGN,OAAOa,QAASN,EAAGP,OAAOc,SAC/B,CAAER,EAAGE,EAASO,KAAMR,EAAGC,EAASQ,KAG/B,SAASC,EAAkBC,EAAQC,EAAMf,EAASC,EAAWe,GAClE,IAAMZ,EAAWa,iBAAOlB,EAAkB,CAAEE,eAExCiB,EAAkB,KAEhBC,EAAW,WACf,IAAMC,EAAUrB,EAAkB,CAAEC,UAASC,cAC7Ca,EAAO,CAAEO,QAASjB,EAASC,QAASe,YACpChB,EAASC,QAAUe,EACnBF,EAAkB,MAGpBvB,GAA0B,WACxB,GAAKG,EAAL,CAIA,IAAMwB,EAAe,WACfN,EACsB,OAApBE,IACFA,EAAkBK,WAAWJ,EAAUH,IAGzCG,KAMJ,OAFAvB,OAAO4B,iBAAiB,SAAUF,GAE3B,WACL1B,OAAO6B,oBAAoB,SAAUH,GACrCJ,GAAmBQ,aAAaR,OAEjCH,GAGLF,EAAkBc,aAAe,CAC/BZ,KAAM,GACNf,SAAS,EACTC,WAAW,EACXe,KAAM,MCvDR,IAiBeY,EAjBW,SAAC3J,GAAS,IAAD,EACGH,IAAMiC,SAAS,MADlB,mBAC1B8H,EAD0B,KACdC,EADc,KAcjC,OAZAhK,IAAMyC,WAAU,WACd,IAAMwH,EAAgB9J,EAAIoI,QACpB2B,EAAiB,IAAIC,gBAAe,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACfN,EAAcM,EAAMC,mBAIxB,OADAL,EAAeM,QAAQP,GAChB,WACLC,EAAeO,UAAUR,MAE1B,CAAC9J,IACG4J,G,gBCuEMW,EA9EI1K,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EACxB8B,oBAAS,GADe,mBAC3C0I,EAD2C,KACpCC,EADoC,OAEN3I,mBAAS,GAFH,mBAE3C4I,EAF2C,KAE3BC,EAF2B,KAG5CC,EAAgB/K,IAAMmJ,SACtB6B,EAAmBlB,EAAkBiB,GACrCE,EAAYD,EAAmBA,EAAiBE,OAAS,EAmB/D,OAlBAnC,GACE,YAA0B,EAAvBQ,QAAwB,IAAfD,EAAc,EAAdA,QACL0B,IACL1B,EAAQjB,EAAIlI,EAAIoI,QAAQ4C,UAAYH,EAAiBE,OAAS,EAC1DN,GAAS,GACTA,GAAS,GACbE,EAAkBxB,EAAQjB,MAE5B,CAAC4C,IAGHjL,IAAMyC,WAAU,WACTuI,IACLC,EAAYJ,GAAkB1K,EAAIoI,QAAQ4C,UACtCP,GAAS,GACTA,GAAS,MACZ,CAACK,EAAWD,EAAkB7K,EAAK0K,IAGpC,kBAACO,EAAA,EAAD,CACEjL,IAAK4K,EACLpK,UAAS,sBACNgK,EAAyB,qBAAjB,gBAEXU,OAAO,MAEP,kBAACD,EAAA,EAAOE,MAAR,CAAc3K,UAAU,QAAQe,KAA+B,UAA/D,WACOb,IADP,QAGA,kBAACuK,EAAA,EAAOG,OAAR,CACEC,gBAAc,mBACd7K,UAAU,YAEZ,kBAACyK,EAAA,EAAOK,SAAR,CAAiBnL,GAAG,oBAClB,kBAACoL,EAAA,EAAD,CAAK/K,UAAU,WACZgL,KACC,kBAACD,EAAA,EAAIE,KAAL,CAAUjL,UAAU,iBAClB,kBAAC,IAAD,CAAMkL,GAA6B,SAAnC,SAGJ,kBAACH,EAAA,EAAIE,KAAL,CACEjL,UAAU,gBACVe,KAA+B,cAFjC,YAMA,kBAACgK,EAAA,EAAIE,KAAL,CACEjL,UAAU,gBACVe,KAAMa,IACNf,OAAO,SACPC,IAAI,uBAJN,UAQA,kBAACiK,EAAA,EAAIE,KAAL,CACEjL,UAAU,gBACVe,KAA+B,aAFjC,SAMA,kBAACgK,EAAA,EAAIE,KAAL,CACEjL,UAAU,gBACVe,KAA+B,YAFjC,gB,wBC5DKoK,MAZf,YAAkD,IAA7BC,EAA4B,EAA5BA,MAAO/H,EAAqB,EAArBA,MAAOgI,EAAc,EAAdA,WACjC,OACE,yBAAKzL,MAAO,CAAE0L,MAAO,QACnB,uBAAGtL,UAAU,kBAAkBoL,GAC/B,kBAACG,EAAA,EAAD,CACEvL,UAAYqL,EAA0B,0BAAb,WACzBG,IAAKnI,MCLb,SAASoI,EAAT,GAAgD,IAAvBC,EAAsB,EAAtBA,OAAQL,EAAc,EAAdA,WAC/B,OACE,oCACGK,EAAOjL,KAAI,SAAC2K,EAAOzK,GAAR,OACV,kBAAC,EAAD,CACEC,IAAG,UAAKwK,EAAL,YAAczK,GACjByK,MAAOA,EAAMrG,KACb1B,MAAO+H,EAAM/H,MACbgI,WAAYA,QA0BPM,MAnBf,YAA4C,IAAvBD,EAAsB,EAAtBA,OAAQL,EAAc,EAAdA,WAC3B,OACE,oCACE,kBAACjG,EAAA,EAAD,CAAKwG,GAAI,GAAIvG,GAAI,GACf,kBAACoG,EAAD,CACEC,OAAQA,EAAOpF,MAAM,EAAG1C,KAAKiI,MAAMH,EAAOjF,OAAS,IACnD4E,WAAYA,KAGhB,kBAACjG,EAAA,EAAD,CAAKwG,GAAI,GAAIvG,GAAI,GACf,kBAACoG,EAAD,CACEC,OAAQA,EAAOpF,MAAM1C,KAAKiI,MAAMH,EAAOjF,OAAS,GAAIiF,EAAOjF,QAC3D4E,WAAYA,OC4BPS,MA/Cf,WACE,IAAMC,EAAe1M,IAAMmJ,SADX,EAEoBnJ,IAAMiC,UAAS,GAFnC,mBAET+J,EAFS,KAEGW,EAFH,KAYhB,OAPA5D,GACE,YAA0B,EAAvBQ,QAAwB,IAAfD,EAAc,EAAdA,SACL0C,GAAc1C,EAAQjB,EAAI,IAAM,GAAGsE,GAAc,KAExD,GACAD,GAGA,kBAACtM,EAAA,EAAD,CAAWD,IAAKuM,EAAcrM,OAAK,EAACM,UAAU,eAAeL,GAAG,UAC9D,kBAACM,EAAA,EAAD,CAAWD,UAAU,SACnB,wBAAIR,IAAKuM,EAAc/L,UAAU,8BAAjC,UAGA,kBAACiM,EAAA,EAAD,CACEjM,UAAU,cACVkM,iBAAiB,cACjBvM,GAAG,eAEH,kBAACwM,EAAA,EAAD,CACEC,aAAa,eACbC,SAAS,cACTC,MAAM,eAEN,kBAAC9F,EAAA,EAAD,CAAKxG,UAAU,aACb,kBAAC,EAAD,CAAW0L,OAAQa,IAAYlB,WAAYA,MAG/C,kBAACc,EAAA,EAAD,CACEC,aAAa,cACbC,SAAS,cACTC,MAAM,eAEN,kBAAC9F,EAAA,EAAD,CAAKxG,UAAU,aACb,kBAAC,EAAD,CAAW0L,OAAQc,IAAYnB,WAAYA,U,QChDnDoB,EAGJ,cAA4C,IAAD,OAA7BH,EAA6B,EAA7BA,MAAOpL,EAAsB,EAAtBA,MAAO8D,EAAe,EAAfA,YAAe,yBAF3C0H,KAAO,GAEoC,KAM3CC,aAAe,SAACpN,GAMd,OALA,EAAKmN,KAAKhJ,KACR,uBAAG9C,IAAK,EAAK8L,KAAKjG,OAAQzG,UAAU,QACjCT,IAGE,GAZkC,KAe3CqN,WAAa,SAACrN,GAOZ,OANA,EAAKmN,KAAKhJ,KACR,kBAAC,WAAD,CAAU9C,IAAK,EAAK8L,KAAKjG,QACvB,wBAAIzG,UAAU,IAAIT,GAClB,+BAGG,GAtBkC,KAyB3CsN,QAAU,WACR,OAAO,yBAAK7M,UAAU,gBAAgB,EAAK0M,OAzB3CI,KAAKR,MAAQA,EACbQ,KAAK5L,MAAQA,EACb4L,KAAK9H,YAAcA,GCPjB+H,EAAW,GAEXC,EAAO,IAAIP,EAAY,CAC3BH,MAAO,gBACPpL,MAAO,MACP8D,YACE,oPAED4H,WAAW,WACXD,aACC,6OAEDA,aACC,gQAGEM,EAAQ,IAAIR,EAAY,CAC5BH,MAAO,iBACPpL,MAAO,MACP8D,YACE,6OAED4H,WAAW,WACXD,aACC,oLAEDA,aACC,sMAEDC,WAAW,eACXD,aACC,6OAEDA,aACC,gQAGJI,EAASrJ,KAAKuJ,GACdF,EAASrJ,KAAKsJ,GAECD,SCrCTG,GAAO,SAAC3N,GACZ,OACE,yBAAKS,UAAU,6BACb,wBAAIA,UAAU,eAAd,SACC+M,GAAStM,KAAI,SAAC4C,EAAO1C,GACpB,OACE,kBAAC,GAAD,CACEC,IAAKD,EACL2L,MAAOjJ,EAAMiJ,MACbtH,YAAa3B,EAAM2B,YACnBrE,MAAOA,SAQbwM,GAAW,SAAC,GAA0C,IAAxCxM,EAAuC,EAAvCA,MAAO2L,EAAgC,EAAhCA,MAActH,GAAkB,EAAzB9D,MAAyB,EAAlB8D,aACvC,OACE,yBAAKhF,UAAU,OACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBAGf,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,IACb,wBAAIA,UAAU,IAAIsM,GAClB,uBAAGtM,UAAU,QAAQgF,GACrB,kBAAC,IAAD,CAAMkG,GAAE,UAAKkC,GAAL,gBAAmCzM,IAA3C,eACe,QAKrB,gCCpBO0M,GAlBE,SAAC,GAAe,IACvB1N,EADsB,EAAZ2N,MACGC,OAAb5N,GACF6N,EAAOT,GAASpN,GAEtB,OACE,yBAAKK,UAAU,qBACZwN,GACC,6BACE,wBAAIxN,UAAU,yBAAyBwN,EAAKlB,OAC5C,yBAAKtM,UAAU,iBAAiBgD,IAAKwK,EAAKtM,MAAO+B,IAAKuK,EAAKlB,QAC1DkB,EAAKX,YAGRW,GAAQ,wBAAIxN,UAAU,yBAAd,0BCAVyN,GAAOpO,IAAMC,YAAW,SAACC,EAAOC,GACpC,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAUA,IAAKA,IACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACCkO,KAAc,kBAAC,EAAD,UAmBNC,GAdH,WACV,IAAMC,EAAWvO,IAAMmJ,SAEvB,OACE,kBAAC,IAAD,CAAeqF,SAAmC,KAC/CC,KAAqB,kBAAC,EAAD,CAAQtO,IAAKoO,IACnC,kBAAC,IAAD,CAAOG,KAAK,IAAIC,OAAK,EAACC,UAAW,kBAAM,kBAACR,GAAD,CAAMjO,IAAKoO,OACjD5C,KAAY,kBAAC,IAAD,CAAO+C,KAAK,QAAQC,OAAK,EAACC,UAAWf,KACjDlC,KAAY,kBAAC,IAAD,CAAO+C,KAAK,YAAYE,UAAWZ,KAChD,kBAAC,EAAD,QCvBca,QACW,cAA7B/G,OAAOgH,SAASC,UAEe,UAA7BjH,OAAOgH,SAASC,UAEhBjH,OAAOgH,SAASC,SAASd,MACvB,2DCZNe,IAASC,OAAO,kBAAC,GAAD,MAASzG,SAAS0G,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.0e1d6b77.chunk.js","sourcesContent":["import React from \"react\";\nimport Typist from \"react-typist\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport {\n  FirstName,\n  LastName,\n  MiddleName,\n  devDesc,\n  icons,\n  gradientColors,\n} from \"../../editable-stuff/configurations.json\";\n\nconst MainBody = React.forwardRef((props, ref) => {\n  return (\n    <>\n      <Jumbotron\n        fluid\n        id=\"home\"\n        style={{\n          background: `linear-gradient(136deg,${gradientColors})`,\n          backgroundSize: \"1200% 1200%\",\n        }}\n        className=\"title bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <Container className=\"text-center\">\n          <h1 ref={ref} className=\"display-1\">\n            {`${FirstName} ${MiddleName} ${LastName}`}\n          </h1>\n          <Typist className=\"lead typist\" cursor={{ show: false }}>\n            {\" \"}\n            {devDesc}\n          </Typist>\n          <div className=\"p-5\">\n            {icons.map((icon, index) => (\n              <a\n                key={`social-icon-${index}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={icon.url}\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\n              >\n                <i className={`fab ${icon.image}  fa-3x socialicons`} />\n              </a>\n            ))}\n          </div>\n          <a\n            className=\"btn btn-outline-light btn-lg \"\n            href=\"#aboutme\"\n            role=\"button\"\n            aria-label=\"Learn more about me\"\n          >\n            More about me\n          </a>\n        </Container>\n      </Jumbotron>\n    </>\n  );\n});\n\nexport default MainBody;\n","import React, { useState, useEffect } from \"react\";\nimport Pdf from \"../../editable-stuff/resume.pdf\";\nimport {\n  aboutHeading,\n  aboutDescription,\n  showInstaProfilePic,\n  instaLink,\n  instaUsername,\n  instaQuery,\n} from \"../../editable-stuff/configurations.json\";\nimport axios from \"axios\";\n\nconst AboutMe = () => {\n  const [instaProfilePic, setInstaProfilePic] = useState(\"\");\n  const [showInsta, setShowInsta] = useState(showInstaProfilePic);\n  const [resumeURL] = useState(Pdf);\n\n  useEffect(() => {\n    if (showInsta) {\n      handleRequest();\n    }\n  }, [showInsta]);\n\n  const handleRequest = async (e) => {\n    try {\n      const response = await axios.get(instaLink + instaUsername + instaQuery);\n      console.log(response);\n      setInstaProfilePic(response.data.graphql.user.profile_pic_url_hd);\n    } catch (error) {\n      setShowInsta(false);\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0\">\n      <div className=\"container container-fluid p-5\">\n        <div className=\"row\">\n          {showInsta && (\n            <div className=\"col-5 d-none d-lg-block align-self-center\">\n              <img\n                className=\"border border-secondary rounded-circle\"\n                src={instaProfilePic}\n                alt=\"profilepicture\"\n              />\n            </div>\n          )}\n          <div className={`col-lg-${showInsta ? \"7\" : \"12\"}`}>\n            <h2 className=\"display-4 mb-5 text-center\">{aboutHeading}</h2>\n            <p className=\"lead text-center\">{aboutDescription}</p>\n            {resumeURL && (\n              <p className=\"lead text-center\">\n                <a\n                  className=\"btn btn-outline-dark btn-lg\"\n                  href={Pdf}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  role=\"button\"\n                  aria-label=\"Resume/CV\"\n                >\n                  Resume\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst ProjectLanguage = ({ value }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(async () => {\n    try {\n      const response = await axios.get(value);\n      return setData(response.data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [value]);\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n  }\n\n  return (\n    <div className=\"pb-3\">\n      Languages:{\" \"}\n      {array.map((language) => (\n        <p key={language} className=\"badge badge-light card-link\">\n          {language}: {Math.trunc((data[language] / total_count) * 1000) / 10} %\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default ProjectLanguage;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\nimport ProjectLanguage from \"./ProjectLanguage\";\n\nconst ProjectCard = ({ value }) => {\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\n\n  const handleUpdatetime = useCallback(() => {\n    const date = new Date(value.pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      return setUpdatedAt(`${hours.toString()} hours ago`);\n    } else {\n      const monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      const day = date.getDate();\n      const monthIndex = date.getMonth();\n      const year = date.getFullYear();\n\n      return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\n    }\n  }, [value.pushed_at]);\n\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n\n  const { name, description, svn_url, stargazers_count, languages_url } = value;\n  return (\n    <Col md={6}>\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\n        <Card.Body>\n          <Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\n          <Card.Text>{description || <Skeleton count={3} />} </Card.Text>\n          {svn_url ? (\n            <>\n              <a\n                href={`${svn_url}/archive/master.zip`}\n                className=\"btn btn-outline-secondary mr-3\"\n              >\n                <i className=\"fab fa-github\" /> Clone Project\n              </a>\n              <a\n                href={svn_url}\n                target=\" _blank\"\n                className=\"btn btn-outline-secondary\"\n              >\n                <i className=\"fab fa-github\" /> Repo\n              </a>\n            </>\n          ) : (\n            <Skeleton count={2} />\n          )}\n          <hr />\n          {languages_url ? (\n            <ProjectLanguage value={languages_url}></ProjectLanguage>\n          ) : (\n            <Skeleton count={3} />\n          )}\n          {stargazers_count ? (\n            <p className=\"card-text\">\n              <span className=\"text-dark card-link mr-4\">\n                <i className=\"fab fa-github\" /> Stars{\" \"}\n                <span className=\"badge badge-dark\">{stargazers_count}</span>\n              </span>\n              <small className=\"text-muted\">Updated {updated_at}</small>\n            </p>\n          ) : (\n            <Skeleton />\n          )}\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport {\n  projectHeading,\n  gitHubLink,\n  gitHubUsername,\n  gitHubQuery,\n  projectsLength,\n} from \"../../editable-stuff/configurations.json\";\nimport axios from \"axios\";\n\nconst Project = () => {\n  const [projectsArray, setProjectsArray] = useState([]);\n  const dummyProject = {\n    name: null,\n    description: null,\n    svn_url: null,\n    stargazers_count: null,\n    languages_url: null,\n    pushed_at: null,\n  };\n  const dummyProjectsArr = new Array(projectsLength).fill(dummyProject);\n\n  const handleRequest = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        gitHubLink + gitHubUsername + gitHubQuery\n      );\n      setProjectsArray(response.data.slice(0, projectsLength));\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, []);\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\n      <Container className=\"p-5\">\n        <h2 className=\"display-4 pb-5 text-center\">{projectHeading}</h2>\n        <Row>\n          {projectsArray.length\n            ? projectsArray.map((project, index) => (\n                <ProjectCard\n                  key={`project-card-${index}`}\n                  id={`project-card-${index}`}\n                  value={project}\n                />\n              ))\n            : dummyProjectsArr.map((project, index) => (\n                <ProjectCard\n                  key={`dummy-${index}`}\n                  id={`dummy-${index}`}\n                  value={project}\n                />\n              ))}\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport {\n  footerMessage,\n  emailAddress,\n} from \"../../editable-stuff/configurations.json\";\n\nfunction GetInTouch() {\n  return (\n    <>\n      <h2 className=\"display-4 pb-3 text-center\">Get In Touch</h2>\n      <p className=\"lead text-center pb-3\">\n        {footerMessage}, <a href={`mailto:${emailAddress}`}>{emailAddress}</a>.\n      </p>\n    </>\n  );\n}\n\nexport default GetInTouch;\n","import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { showGetInTouch } from \"../editable-stuff/configurations.json\";\nimport GetInTouch from \"./home/GetInTouch\";\nconst Footer = () => {\n  const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\n\n  return (\n    <footer style={bgStyle} className=\"mt-auto py-5 text-center \">\n      <Container>\n        {showGetInTouch && <GetInTouch />}\n        <i className=\"fas fa-code\"></i> with <i className=\"fas fa-heart\"></i> by{\" \"}\n        <a\n          className=\"badge badge-dark\"\n          rel=\"noopener\"\n          href=\"https://github.com/hashirshoaeb\"\n          aria-label=\"My GitHub\"\n        >\n          Hashir Shoaib\n        </a>{\" \"}\n        using <i className=\"fab fa-react\"></i>\n        <p>\n          <small className=\"text-muted\">\n            {\" \"}\n            Project code is open source. Feel free to fork and make your own\n            version.\n          </small>\n        </p>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useLayoutEffect, useEffect } from \"react\"\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({ element, useWindow }) {\n  if (!isBrowser) return { x: 0, y: 0 };\n\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n\n  return useWindow\n    ? { x: window.scrollX, y: window.scrollY }\n    : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\n  const position = useRef(getScrollPosition({ useWindow }));\n\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition({ element, useWindow });\n    effect({ prevPos: position.current, currPos });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return;\n    }\n\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      throttleTimeout && clearTimeout(throttleTimeout);\n    };\n  }, deps);\n}\n\nuseScrollPosition.defaultProps = {\n  deps: [],\n  element: false,\n  useWindow: false,\n  wait: null,\n};\n","import React from \"react\";\n\nconst useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = React.useState(null);\n  React.useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useScrollPosition } from \"../hooks/useScrollPosition\";\nimport useResizeObserver from \"../hooks/useResizeObserver\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Pdf from \"../editable-stuff/resume.pdf\";\nimport { showBlog, FirstName } from \"../editable-stuff/configurations.json\";\n\nconst Navigation = React.forwardRef((props, ref) => {\n  const [isTop, setIsTop] = useState(true);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const navbarMenuRef = React.useRef();\n  const navbarDimensions = useResizeObserver(navbarMenuRef);\n  const navBottom = navbarDimensions ? navbarDimensions.bottom : 0;\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!navbarDimensions) return;\n      currPos.y + ref.current.offsetTop - navbarDimensions.bottom > 5\n        ? setIsTop(true)\n        : setIsTop(false);\n      setScrollPosition(currPos.y);\n    },\n    [navBottom]\n  );\n\n  React.useEffect(() => {\n    if (!navbarDimensions) return;\n    navBottom - scrollPosition >= ref.current.offsetTop\n      ? setIsTop(false)\n      : setIsTop(true);\n  }, [navBottom, navbarDimensions, ref, scrollPosition]);\n\n  return (\n    <Navbar\n      ref={navbarMenuRef}\n      className={` fixed-top  ${\n        !isTop ? \"navbar-white\" : \"navbar-transparent\"\n      }`}\n      expand=\"lg\"\n    >\n      <Navbar.Brand className=\"brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\n        {`<${FirstName} />`}\n      </Navbar.Brand>\n      <Navbar.Toggle\n        aria-controls=\"basic-navbar-nav\"\n        className=\"toggler\"\n      />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {showBlog && (\n            <Nav.Link className=\"nav-link lead\" >\n              <Link to={process.env.PUBLIC_URL + \"/blog\"}>Blog</Link>\n            </Nav.Link>\n          )}\n          <Nav.Link\n            className=\"nav-link lead\" \n            href={process.env.PUBLIC_URL + \"/#projects\"}\n          >\n            Projects\n          </Nav.Link>\n          <Nav.Link\n            className=\"nav-link lead\" \n            href={Pdf}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Resume\n          </Nav.Link>\n          <Nav.Link\n            className=\"nav-link lead\" \n            href={process.env.PUBLIC_URL + \"/#aboutme\"}\n          >\n            About\n          </Nav.Link>\n          <Nav.Link\n            className=\"nav-link lead\" \n            href={process.env.PUBLIC_URL + \"/#skills\"}\n          >\n            Skills\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n});\n\nexport default Navigation;\n","import React from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\n\nfunction SkillsBar({ skill, value, isScrolled }) {\n  return (\n    <div style={{ width: \"95%\" }}>\n      <p className=\"lead mb-1 mt-2\">{skill}</p>\n      <ProgressBar\n        className={!isScrolled ? \"progress\" : \" progress-bar-animation\"}\n        now={value}\n      />\n    </div>\n  );\n}\n\nexport default SkillsBar;\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport SkillsBar from \"./SkillsBar\";\n\nfunction SkillsSection({ skills, isScrolled }) {\n  return (\n    <>\n      {skills.map((skill, index) => (\n        <SkillsBar\n          key={`${skill}-${index}`}\n          skill={skill.name}\n          value={skill.value}\n          isScrolled={isScrolled}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction SkillsTab({ skills, isScrolled }) {\n  return (\n    <>\n      <Col xs={12} md={6}>\n        <SkillsSection\n          skills={skills.slice(0, Math.floor(skills.length / 2))}\n          isScrolled={isScrolled}\n        />\n      </Col>\n      <Col xs={12} md={6}>\n        <SkillsSection\n          skills={skills.slice(Math.floor(skills.length / 2), skills.length)}\n          isScrolled={isScrolled}\n        />\n      </Col>\n    </>\n  );\n}\n\nexport default SkillsTab;\n","import React from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport SkillsTab from \"./SkillsTab\";\nimport Row from \"react-bootstrap/Row\";\nimport { Jumbotron, Container } from \"react-bootstrap\";\nimport {\n  hardSkills,\n  softSkills,\n} from \"../../editable-stuff/configurations.json\";\nimport { useScrollPosition } from \"../../hooks/useScrollPosition\";\n\nfunction Skills() {\n  const skillsTabRef = React.useRef();\n  const [isScrolled, setIsScrolled] = React.useState(false);\n  //const navbarDimensions = useResizeObserver(navbarMenuRef);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!isScrolled && currPos.y - 400 < 0) setIsScrolled(true);\n    },\n    [],\n    skillsTabRef\n  );\n  return (\n    <Jumbotron ref={skillsTabRef} fluid className=\"bg-white m-0\" id=\"skills\">\n      <Container className=\" p-5 \">\n        <h2 ref={skillsTabRef} className=\"display-4 pb-5 text-center\">\n          Skills\n        </h2>\n        <Tabs\n          className=\"skills-tabs\"\n          defaultActiveKey=\"hard-skills\"\n          id=\"skills-tabs\"\n        >\n          <Tab\n            tabClassName=\"skills-tab  \"\n            eventKey=\"hard-skills\"\n            title=\"Hard Skills\"\n          >\n            <Row className=\"pt-3 px-1\">\n              <SkillsTab skills={hardSkills} isScrolled={isScrolled} />\n            </Row>\n          </Tab>\n          <Tab\n            tabClassName=\"skills-tab \"\n            eventKey=\"soft-skills\"\n            title=\"Soft Skills\"\n          >\n            <Row className=\"pt-3 px-1\">\n              <SkillsTab skills={softSkills} isScrolled={isScrolled} />\n            </Row>\n          </Tab>\n        </Tabs>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Skills;\n","import React, { Fragment } from \"react\";\n\nclass BlogBuilder {\n  list = [];\n\n  constructor({ title, image, description }) {\n    this.title = title;\n    this.image = image;\n    this.description = description;\n  }\n\n  addParagraph = (props) => {\n    this.list.push(\n      <p key={this.list.length} className=\"lead\">\n        {props}\n      </p>\n    );\n    return this;\n  };\n\n  addHeading = (props) => {\n    this.list.push(\n      <Fragment key={this.list.length}>\n        <h1 className=\"\">{props}</h1>\n        <hr />\n      </Fragment>\n    );\n    return this;\n  };\n\n  getBlog = () => {\n    return <div className=\"container-lg\">{this.list}</div>;\n  };\n}\n\nexport { BlogBuilder };\n","import { BlogBuilder } from \"../components/blog/BlogBuilder\";\nconst bloglist = [];\n\nconst blog = new BlogBuilder({\n  title: \"My First Blog\",\n  image: \"img\",\n  description:\n    \"Description Lorem ipsum dolor, sit amet consectetur adipisicing elit. Voluptatem, dolores? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quia provident similique corporis rem ullam odio excepturi voluptas harum, architecto sit!\",\n})\n  .addHeading(\"Heading\")\n  .addParagraph(\n    \"1st Paragraph Lorem ipsum dolor sit amet consectetur adipisicing elit. Aspernatur vero reiciendis quas, autem sit culpa? Quibusdam, cupiditate voluptate a non nulla aliquid enim doloremque ullam, facilis quisquam similique hic omnis!\"\n  )\n  .addParagraph(\n    \"2nd Paragraph Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequuntur ad, temporibus quae obcaecati eum expedita pariatur aspernatur recusandae beatae iste soluta sunt blanditiis dolore ipsam quia laboriosam quas perspiciatis architecto?\"\n  );\n\nconst blog1 = new BlogBuilder({\n  title: \"My Second Blog\",\n  image: \"img\",\n  description:\n    \"Description Lorem ipsum dolor sit amet consectetur adipisicing elit. Iure tempore aut neque consectetur voluptatem quam nihil, facere earum adipisci, animi beatae dicta maiores, ipsam delectus ab molestias dolorum aperiam? Sapiente?\",\n})\n  .addHeading(\"Heading\")\n  .addParagraph(\n    \"1st Paragraph Aspernatur vero reiciendis quas, autem sit culpa? Quibusdam, cupiditate voluptate a non nulla aliquid enim doloremque ullam, facilis quisquam similique hic omnis!\"\n  )\n  .addParagraph(\n    \"2nd Paragraph Consequuntur ad, temporibus quae obcaecati eum expedita pariatur aspernatur recusandae beatae iste soluta sunt blanditiis dolore ipsam quia laboriosam quas perspiciatis architecto?\"\n  )\n  .addHeading(\"New Heading\")\n  .addParagraph(\n    \"1st Paragraph Lorem ipsum dolor sit amet consectetur adipisicing elit. Aspernatur vero reiciendis quas, autem sit culpa? Quibusdam, cupiditate voluptate a non nulla aliquid enim doloremque ullam, facilis quisquam similique hic omnis!\"\n  )\n  .addParagraph(\n    \"2nd Paragraph Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequuntur ad, temporibus quae obcaecati eum expedita pariatur aspernatur recusandae beatae iste soluta sunt blanditiis dolore ipsam quia laboriosam quas perspiciatis architecto?\"\n  );\n\nbloglist.push(blog1);\nbloglist.push(blog);\n\nexport default bloglist;\n","import React from \"react\";\nimport { BlogBuilder } from \"./BlogBuilder\";\nimport bloglist from \"../../editable-stuff/blog\";\nimport { Link } from \"react-router-dom\";\nconst Blog = (props) => {\n  return (\n    <div className=\"container-lg mt-5 bg-blue\">\n      <h1 className=\"text-center\">Blogs</h1>\n      {bloglist.map((value, index) => {\n        return (\n          <BlogCard\n            key={index}\n            title={value.title}\n            description={value.description}\n            index={index}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nconst BlogCard = ({ index, title, image, description }) => {\n  return (\n    <div className=\"m-5\">\n      <div className=\"\">\n        <div className=\"row\">\n          <div className=\"col-4 col-lg-12\">\n            {/* <img src={image} className=\"card-img\" alt=\"...\" /> */}\n          </div>\n          <div className=\"col-8 col-lg-12\">\n            <div className=\"\">\n              <h1 className=\"\">{title}</h1>\n              <p className=\"lead\">{description}</p>\n              <Link to={`${process.env.PUBLIC_URL}blog/${index}`}>\n                Read more...{\" \"}\n              </Link>\n            </div>\n          </div>\n        </div>\n        <hr />\n      </div>\n    </div>\n  );\n};\n\nexport { Blog, BlogBuilder };\n","import React from \"react\";\nimport bloglist from \"../../editable-stuff/blog\";\nconst BlogPost = ({ match }) => {\n  const { id } = match.params;\n  const post = bloglist[id];\n\n  return (\n    <div className=\"container-lg mt-5\">\n      {post && (\n        <div>\n          <h1 className=\"display-2 text-center\">{post.title}</h1>\n          <img className=\"img-fluid mb-2\" src={post.image} alt={post.title} />\n          {post.getBlog()}\n        </div>\n      )}\n      {!post && <h1 className=\"display-1 text-center\">404 - Page not found</h1>}\n    </div>\n  );\n};\n\nexport default BlogPost;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport {\n  showNavigationbar,\n  showBlog,\n} from \"./editable-stuff/configurations.json\";\nimport MainBody from \"./components/home/MainBody\";\nimport AboutMe from \"./components/home/AboutMe\";\nimport Project from \"./components/home/Project\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport Skills from \"./components/home/Skills\";\nimport { Blog } from \"./components/blog/Blog\";\nimport BlogPost from \"./components/blog/BlogPost\";\nimport { showSkills } from \"./editable-stuff/configurations.json\";\nconst Home = React.forwardRef((props, ref) => {\n  return (\n    <Fragment>\n      <MainBody ref={ref} />\n      <AboutMe />\n      <Project />\n      {showSkills && <Skills />}\n    </Fragment>\n  );\n});\n\nconst App = () => {\n  const titleRef = React.useRef();\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n      {showNavigationbar && <Navbar ref={titleRef} />}\n      <Route path=\"/\" exact component={() => <Home ref={titleRef} />} />\n      {showBlog && <Route path=\"/blog\" exact component={Blog} />}\n      {showBlog && <Route path=\"/blog/:id\" component={BlogPost} />}\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/resume.0c246fa0.pdf\";"],"sourceRoot":""}